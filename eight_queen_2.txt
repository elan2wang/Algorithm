/*
 八皇后问题求解，采用回溯法
*/
#include<stdio.h>

int columnIndex[8];
int candidate[8][8];
int count = 0;

void calculate_candidate(int *columnIndex, int pos)
{
	int i,j,flag = 1;
	for(i = 0; i < 8; i++){
		for(j = 0; j < pos; j++){
			if((columnIndex[j] == i) || (i-columnIndex[j] == pos-j) || (i-columnIndex[j] == j-pos)){
				candidate[pos][i] = -1;
				flag = 0;
				break;
			}
		}
		if(flag){
			candidate[pos][i] = i;
		}
		flag = 1;
	}
}

int select(int pos)
{
	int i;
	for(i = 0; i < 8; i++){
		if(candidate[pos][i] != -1){
			candidate[pos][i] = -1;
			return i;
		}
	}
	return -1;
}

void main()
{
	FILE *out = fopen("out.txt", "w");
	if(out == NULL){
		printf("file open failed!");
		return;
	}
	int i,j,k,temp;
	calculate_candidate(columnIndex, 0);
	
	for(i = 0; i < 8; i++){
		temp = select(i);
		if(temp == -1){
			i = i-2;
		} else {
			columnIndex[i] = temp;
			if(i == 7){
				count++;
				i = i-2;

				for(j=0;j<8;j++)fprintf(out, "%d ",columnIndex[j]);
				fprintf(out, "\n");
				fflush(out);
			} else {
				calculate_candidate(columnIndex, i+1);
			}
		}
		
		temp = 0;
		for(j = 0; j < 8; j++){
			for(k = 0; k < 8; k++){
            	temp += candidate[j][k];
			}
		}
		if(temp == -64)break;
	}
	printf("%d\n",count);
}
